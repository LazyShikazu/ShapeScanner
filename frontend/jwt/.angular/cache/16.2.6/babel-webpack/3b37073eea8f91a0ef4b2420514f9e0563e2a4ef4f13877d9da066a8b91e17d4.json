{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nclass LoginComponent {\n  constructor(formBuilder, http, router) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n    this.ValidateEmail = email => {\n      var validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      if (email.match(validRegex)) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: '',\n      password: ''\n    });\n  }\n  submit() {\n    let user = this.form.getRawValue();\n    if (user.email == '' || user.password == '') {\n      Swal.fire('Error', 'Please enter all the fields', 'error');\n    } else if (!this.ValidateEmail(user.email)) {\n      Swal.fire('Error', 'Please enter a valid email address', 'error');\n    } else {\n      this.http.post('http://localhost:8000/api/login', user, {\n        withCredentials: true\n      }).subscribe(res => this.router.navigate(['/']), err => {\n        Swal.fire('Error', err.error.message, 'error');\n      });\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 2,\n    vars: 0,\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"login works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { LoginComponent };","map":{"version":3,"names":["Swal","LoginComponent","constructor","formBuilder","http","router","ValidateEmail","email","validRegex","match","ngOnInit","form","group","password","submit","user","getRawValue","fire","post","withCredentials","subscribe","res","navigate","err","error","message","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","_2","selectors","decls","vars","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\nraje\\Desktop\\VScode\\show\\frontend\\jwt\\src\\app\\login\\login.component.ts","C:\\Users\\nraje\\Desktop\\VScode\\show\\frontend\\jwt\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      email: '',\n      password: '',\n    });\n  }\n\n  ValidateEmail = (email: any) => {\n\n    var validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n    if (email.match(validRegex)) {\n\n      return true;\n\n    } else {\n\n      return false;\n\n    }\n\n  }\n\n  submit(): void {\n\n    let user = this.form.getRawValue();\n\n    if (user.email == '' || user.password == '') {\n      Swal.fire('Error', 'Please enter all the fields', 'error');\n\n    }else if(!this.ValidateEmail(user.email)){\n\n      Swal.fire('Error', 'Please enter a valid email address', 'error');\n\n    } else {\n\n      this.http\n        .post('http://localhost:8000/api/login', user, {\n          withCredentials: true,\n        })\n        .subscribe(\n          (res) => this.router.navigate(['/']),\n          (err) => {\n            Swal.fire('Error', err.error.message, 'error');\n          }\n        );\n    }\n  }\n}\n","<p>login works!</p>\n"],"mappings":"AAIA,OAAOA,IAAI,MAAM,aAAa;;;;;AAE9B,MAKaC,cAAc;EAGzBC,YACUC,WAAwB,EACxBC,IAAgB,EAChBC,MAAc;IAFd,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAC,MAAM,GAANA,MAAM;IAUhB,KAAAC,aAAa,GAAIC,KAAU,IAAI;MAE7B,IAAIC,UAAU,GAAG,sEAAsE;MAEvF,IAAID,KAAK,CAACE,KAAK,CAACD,UAAU,CAAC,EAAE;QAE3B,OAAO,IAAI;OAEZ,MAAM;QAEL,OAAO,KAAK;;IAIhB,CAAC;EAvBE;EAEHE,QAAQA,CAAA;IACN,IAAI,CAACC,IAAI,GAAG,IAAI,CAACR,WAAW,CAACS,KAAK,CAAC;MACjCL,KAAK,EAAE,EAAE;MACTM,QAAQ,EAAE;KACX,CAAC;EACJ;EAkBAC,MAAMA,CAAA;IAEJ,IAAIC,IAAI,GAAG,IAAI,CAACJ,IAAI,CAACK,WAAW,EAAE;IAElC,IAAID,IAAI,CAACR,KAAK,IAAI,EAAE,IAAIQ,IAAI,CAACF,QAAQ,IAAI,EAAE,EAAE;MAC3Cb,IAAI,CAACiB,IAAI,CAAC,OAAO,EAAE,6BAA6B,EAAE,OAAO,CAAC;KAE3D,MAAK,IAAG,CAAC,IAAI,CAACX,aAAa,CAACS,IAAI,CAACR,KAAK,CAAC,EAAC;MAEvCP,IAAI,CAACiB,IAAI,CAAC,OAAO,EAAE,oCAAoC,EAAE,OAAO,CAAC;KAElE,MAAM;MAEL,IAAI,CAACb,IAAI,CACNc,IAAI,CAAC,iCAAiC,EAAEH,IAAI,EAAE;QAC7CI,eAAe,EAAE;OAClB,CAAC,CACDC,SAAS,CACPC,GAAG,IAAK,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EACnCC,GAAG,IAAI;QACNvB,IAAI,CAACiB,IAAI,CAAC,OAAO,EAAEM,GAAG,CAACC,KAAK,CAACC,OAAO,EAAE,OAAO,CAAC;MAChD,CAAC,CACF;;EAEP;EAAC,QAAAC,CAAA,G;qBAxDUzB,cAAc,EAAA0B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdlC,cAAc;IAAAmC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX3Bd,EAAA,CAAAgB,cAAA,QAAG;QAAAhB,EAAA,CAAAiB,MAAA,mBAAY;QAAAjB,EAAA,CAAAkB,YAAA,EAAI;;;;;;SDWN5C,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}