{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nclass RegisterComponent {\n  constructor(formBuilder, http, router) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n    this.ValidateEmail = email => {\n      var validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      if (email.match(validRegex)) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      name: '',\n      email: '',\n      password: ''\n    });\n  }\n  submit() {\n    let user = this.form.getRawValue();\n    if (user.name == \"\" || user.email == '' || user.password == '') {\n      Swal.fire('Error', 'Please enter all the fields', 'error');\n    } else if (!this.ValidateEmail(user.email)) {\n      Swal.fire('Error', 'Please enter a valid email address', 'error');\n    } else {\n      this.http.post('http://localhost:8000/api/register', this.form.getRawValue(), {\n        withCredentials: true\n      }).subscribe(() => this.router.navigate(['/']), err => {\n        Swal.fire(\"Error\", err.error.message, 'error');\n      });\n    }\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 8,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"submit\"], [1, \"h3\", \"mb-3\", \"fw-normal\"], [\"formControlName\", \"name\", \"placeholder\", \"Name\", \"required\", \"\", 1, \"form-control\"], [\"formControlName\", \"email\", \"type\", \"email\", \"placeholder\", \"Email\", \"required\", \"\", 1, \"form-control\"], [\"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"Password\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"w-100\", \"btn\", \"btn-lg\", \"btn-primary\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"submit\", function RegisterComponent_Template_form_submit_0_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Please register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 2)(4, \"input\", 3)(5, \"input\", 4);\n        i0.ɵɵelementStart(6, \"button\", 5);\n        i0.ɵɵtext(7, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { RegisterComponent };","map":{"version":3,"names":["Swal","RegisterComponent","constructor","formBuilder","http","router","ValidateEmail","email","validRegex","match","ngOnInit","form","group","name","password","submit","user","getRawValue","fire","post","withCredentials","subscribe","navigate","err","error","message","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","RegisterComponent_Template_form_submit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty"],"sources":["C:\\Users\\nraje\\Desktop\\VScode\\show\\frontend\\jwt\\src\\app\\register\\register.component.ts","C:\\Users\\nraje\\Desktop\\VScode\\show\\frontend\\jwt\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      name: '',\n      email: '',\n      password: '',\n    });\n  }\n\n   ValidateEmail = (email: any) => {\n\n    var validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n    if (email.match(validRegex)) {\n\n      return true;\n\n    } else {\n\n      return false;\n\n    }\n\n  }\n\n  submit(): void {\n\n    let user = this.form.getRawValue();\n\n    if (user.name == \"\" || user.email == '' || user.password == '') {\n      Swal.fire('Error', 'Please enter all the fields', 'error');\n\n    }else if(!this.ValidateEmail(user.email)){\n\n      Swal.fire('Error', 'Please enter a valid email address', 'error');\n\n    } else {\n\n    this.http\n      .post('http://localhost:8000/api/register', this.form.getRawValue(), {\n        withCredentials: true,\n      })\n      .subscribe(() => this.router.navigate(['/']),(err) => {\n        Swal.fire(\"Error\",err.error.message,'error')\n      })\n\n    }\n  }\n}\n","<form [formGroup]=\"form\" (submit)=\"submit()\">\n  <h1 class=\"h3 mb-3 fw-normal\">Please register</h1>\n\n  <input formControlName=\"name\" class=\"form-control\" placeholder=\"Name\" required>\n\n  <input formControlName=\"email\" type=\"email\" class=\"form-control\" placeholder=\"Email\" required>\n\n  <input formControlName=\"password\" type=\"password\" class=\"form-control\" placeholder=\"Password\" required>\n\n  <button class=\"w-100 btn btn-lg btn-primary\" type=\"submit\">Submit</button>\n</form>\n"],"mappings":"AAIA,OAAOA,IAAI,MAAM,aAAa;;;;;AAE9B,MAKaC,iBAAiB;EAG5BC,YACUC,WAAwB,EACxBC,IAAgB,EAChBC,MAAc;IAFd,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAC,MAAM,GAANA,MAAM;IAWf,KAAAC,aAAa,GAAIC,KAAU,IAAI;MAE9B,IAAIC,UAAU,GAAG,sEAAsE;MAEvF,IAAID,KAAK,CAACE,KAAK,CAACD,UAAU,CAAC,EAAE;QAE3B,OAAO,IAAI;OAEZ,MAAM;QAEL,OAAO,KAAK;;IAIhB,CAAC;EAxBE;EAEHE,QAAQA,CAAA;IACN,IAAI,CAACC,IAAI,GAAG,IAAI,CAACR,WAAW,CAACS,KAAK,CAAC;MACjCC,IAAI,EAAE,EAAE;MACRN,KAAK,EAAE,EAAE;MACTO,QAAQ,EAAE;KACX,CAAC;EACJ;EAkBAC,MAAMA,CAAA;IAEJ,IAAIC,IAAI,GAAG,IAAI,CAACL,IAAI,CAACM,WAAW,EAAE;IAElC,IAAID,IAAI,CAACH,IAAI,IAAI,EAAE,IAAIG,IAAI,CAACT,KAAK,IAAI,EAAE,IAAIS,IAAI,CAACF,QAAQ,IAAI,EAAE,EAAE;MAC9Dd,IAAI,CAACkB,IAAI,CAAC,OAAO,EAAE,6BAA6B,EAAE,OAAO,CAAC;KAE3D,MAAK,IAAG,CAAC,IAAI,CAACZ,aAAa,CAACU,IAAI,CAACT,KAAK,CAAC,EAAC;MAEvCP,IAAI,CAACkB,IAAI,CAAC,OAAO,EAAE,oCAAoC,EAAE,OAAO,CAAC;KAElE,MAAM;MAEP,IAAI,CAACd,IAAI,CACNe,IAAI,CAAC,oCAAoC,EAAE,IAAI,CAACR,IAAI,CAACM,WAAW,EAAE,EAAE;QACnEG,eAAe,EAAE;OAClB,CAAC,CACDC,SAAS,CAAC,MAAM,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAEC,GAAG,IAAI;QACnDvB,IAAI,CAACkB,IAAI,CAAC,OAAO,EAACK,GAAG,CAACC,KAAK,CAACC,OAAO,EAAC,OAAO,CAAC;MAC9C,CAAC,CAAC;;EAGN;EAAC,QAAAC,CAAA,G;qBAvDUzB,iBAAiB,EAAA0B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBlC,iBAAiB;IAAAmC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX9Bf,EAAA,CAAAiB,cAAA,cAA6C;QAApBjB,EAAA,CAAAkB,UAAA,oBAAAC,kDAAA;UAAA,OAAUH,GAAA,CAAA5B,MAAA,EAAQ;QAAA,EAAC;QAC1CY,EAAA,CAAAiB,cAAA,YAA8B;QAAAjB,EAAA,CAAAoB,MAAA,sBAAe;QAAApB,EAAA,CAAAqB,YAAA,EAAK;QAElDrB,EAAA,CAAAsB,SAAA,eAA+E;QAM/EtB,EAAA,CAAAiB,cAAA,gBAA2D;QAAAjB,EAAA,CAAAoB,MAAA,aAAM;QAAApB,EAAA,CAAAqB,YAAA,EAAS;;;QATtErB,EAAA,CAAAuB,UAAA,cAAAP,GAAA,CAAAhC,IAAA,CAAkB;;;;;;;SDWXV,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}