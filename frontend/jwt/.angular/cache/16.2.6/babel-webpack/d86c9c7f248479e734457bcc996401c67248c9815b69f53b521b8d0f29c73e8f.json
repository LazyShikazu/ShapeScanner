{"ast":null,"code":"import { Emitters } from '../emitters/emitter';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nclass HomeComponent {\n  // constructor(private http: HttpClient) {}\n  ngOnInit() {\n    this.http.get('http://localhost:8000/api/user', {\n      withCredentials: true\n    }).subscribe(res => {\n      this.message = `Hi ${res.name}`;\n      Emitters.authEmitter.emit(true);\n    }, err => {\n      this.message = 'You are not logged in';\n      Emitters.authEmitter.emit(false);\n    });\n  }\n  constructor(http) {\n    this.http = http;\n    this.message = '';\n    this.imageSelected = null;\n  }\n  onFileSelected(event) {\n    this.imageSelected = event.target.files[0];\n  }\n  onSubmit() {\n    if (this.imageSelected) {\n      const formData = new FormData();\n      formData.append('image', this.imageSelected);\n      this.http.post('http://your-backend-api/upload', formData).subscribe(response => {\n        console.log('Image uploaded successfully', response);\n      }, error => {\n        console.error('Error uploading image', error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 9,\n    vars: 1,\n    consts: [[3, \"ngSubmit\"], [\"imageForm\", \"ngForm\"], [\"type\", \"file\", \"accept\", \"image/*\", 3, \"change\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"Let's gooo, routing is working!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"button\");\n        i0.ɵɵtext(3, \"Image Upload\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"input\", 2);\n        i0.ɵɵlistener(\"change\", function HomeComponent_Template_input_change_6_listener($event) {\n          return ctx.onFileSelected($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 3);\n        i0.ɵɵtext(8, \"Upload Image\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"disabled\", !ctx.imageSelected);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm],\n    styles: [\".button[_ngcontent-%COMP%]{\\n  \\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyIuYnV0dG9ue1xyXG4gIFxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { HomeComponent };","map":{"version":3,"names":["Emitters","HomeComponent","ngOnInit","http","get","withCredentials","subscribe","res","message","name","authEmitter","emit","err","constructor","imageSelected","onFileSelected","event","target","files","onSubmit","formData","FormData","append","post","response","console","log","error","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","HomeComponent_Template_form_ngSubmit_4_listener","HomeComponent_Template_input_change_6_listener","$event","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\nraje\\Desktop\\VScode\\show\\frontend\\jwt\\src\\app\\home\\home.component.ts","C:\\Users\\nraje\\Desktop\\VScode\\show\\frontend\\jwt\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Emitters } from '../emitters/emitter';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  message = '';\n\n  // constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.http\n      .get('http://localhost:8000/api/user', { withCredentials: true })\n      .subscribe(\n        (res: any) => {\n          this.message = `Hi ${res.name}`;\n          Emitters.authEmitter.emit(true);\n        },\n        (err) => {\n          this.message = 'You are not logged in';\n          Emitters.authEmitter.emit(false);\n        }\n      );\n  }\n\n  imageSelected: File | null = null;\n\n  constructor(private http: HttpClient) { }\n\n  onFileSelected(event: any): void {\n    this.imageSelected = event.target.files[0] as File;\n  }\n\n  onSubmit(): void {\n    if (this.imageSelected) {\n      const formData = new FormData();\n      formData.append('image', this.imageSelected);\n\n      this.http.post<any>('http://your-backend-api/upload', formData)\n        .subscribe(response => {\n          console.log('Image uploaded successfully', response);\n        }, error => {\n          console.error('Error uploading image', error);\n        });\n    }\n  }\n}\n","<p>Let's gooo, routing is working!</p>\n\n<button>Image Upload</button>\n\n<form (ngSubmit)=\"onSubmit()\" #imageForm=\"ngForm\">\n  <input type=\"file\" (change)=\"onFileSelected($event)\" accept=\"image/*\" />\n  <button type=\"submit\" [disabled]=\"!imageSelected\">Upload Image</button>\n</form>\n\n\n"],"mappings":"AAEA,SAASA,QAAQ,QAAQ,qBAAqB;;;;AAE9C,MAKaC,aAAa;EAGxB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,IAAI,CACNC,GAAG,CAAC,gCAAgC,EAAE;MAAEC,eAAe,EAAE;IAAI,CAAE,CAAC,CAChEC,SAAS,CACPC,GAAQ,IAAI;MACX,IAAI,CAACC,OAAO,GAAG,MAAMD,GAAG,CAACE,IAAI,EAAE;MAC/BT,QAAQ,CAACU,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;IACjC,CAAC,EACAC,GAAG,IAAI;MACN,IAAI,CAACJ,OAAO,GAAG,uBAAuB;MACtCR,QAAQ,CAACU,WAAW,CAACC,IAAI,CAAC,KAAK,CAAC;IAClC,CAAC,CACF;EACL;EAIAE,YAAoBV,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IArBxB,KAAAK,OAAO,GAAG,EAAE;IAmBZ,KAAAM,aAAa,GAAgB,IAAI;EAEO;EAExCC,cAAcA,CAACC,KAAU;IACvB,IAAI,CAACF,aAAa,GAAGE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAS;EACpD;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACL,aAAa,EAAE;MACtB,MAAMM,QAAQ,GAAG,IAAIC,QAAQ,EAAE;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACR,aAAa,CAAC;MAE5C,IAAI,CAACX,IAAI,CAACoB,IAAI,CAAM,gCAAgC,EAAEH,QAAQ,CAAC,CAC5Dd,SAAS,CAACkB,QAAQ,IAAG;QACpBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,QAAQ,CAAC;MACtD,CAAC,EAAEG,KAAK,IAAG;QACTF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;;EAER;EAAC,QAAAC,CAAA,G;qBAxCU3B,aAAa,EAAA4B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbhC,aAAa;IAAAiC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT1BX,EAAA,CAAAa,cAAA,QAAG;QAAAb,EAAA,CAAAc,MAAA,sCAA+B;QAAAd,EAAA,CAAAe,YAAA,EAAI;QAEtCf,EAAA,CAAAa,cAAA,aAAQ;QAAAb,EAAA,CAAAc,MAAA,mBAAY;QAAAd,EAAA,CAAAe,YAAA,EAAS;QAE7Bf,EAAA,CAAAa,cAAA,iBAAkD;QAA5Cb,EAAA,CAAAgB,UAAA,sBAAAC,gDAAA;UAAA,OAAYL,GAAA,CAAAtB,QAAA,EAAU;QAAA,EAAC;QAC3BU,EAAA,CAAAa,cAAA,eAAwE;QAArDb,EAAA,CAAAgB,UAAA,oBAAAE,+CAAAC,MAAA;UAAA,OAAUP,GAAA,CAAA1B,cAAA,CAAAiC,MAAA,CAAsB;QAAA,EAAC;QAApDnB,EAAA,CAAAe,YAAA,EAAwE;QACxEf,EAAA,CAAAa,cAAA,gBAAkD;QAAAb,EAAA,CAAAc,MAAA,mBAAY;QAAAd,EAAA,CAAAe,YAAA,EAAS;;;QAAjDf,EAAA,CAAAoB,SAAA,GAA2B;QAA3BpB,EAAA,CAAAqB,UAAA,cAAAT,GAAA,CAAA3B,aAAA,CAA2B;;;;;;;SDGtCb,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}