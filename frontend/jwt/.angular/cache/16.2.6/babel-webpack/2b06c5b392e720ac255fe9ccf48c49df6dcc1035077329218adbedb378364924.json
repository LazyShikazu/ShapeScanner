{"ast":null,"code":"import { Emitters } from '../emitters/emitter';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nclass HomeComponent {\n  ngOnInit() {\n    this.http.get('http://localhost:8000/api/user', {\n      withCredentials: true\n    }).subscribe(res => {\n      this.message = `Hi ${res.name}`;\n      Emitters.authEmitter.emit(true);\n    }, err => {\n      this.message = 'You are not logged in';\n      Emitters.authEmitter.emit(false);\n    });\n  }\n  constructor(http) {\n    this.http = http;\n    this.message = '';\n    this.imagePreview = null;\n    this.selectedCoordinates = null;\n    this.imageSelected = null;\n  }\n  onFileSelected(event) {\n    this.imageSelected = event.target.files[0];\n    this.previewImage();\n  }\n  previewImage() {\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result;\n    };\n    reader.readAsDataURL(this.imageSelected);\n  }\n  onImageMouseMove(event) {\n    // Calculate the coordinates based on the image dimensions\n    const imgElement = event.target;\n    const rect = imgElement.getBoundingClientRect();\n    const x = Math.round((event.clientX - rect.left) / rect.width * 720);\n    const y = Math.round((event.clientY - rect.top) / rect.height * 720);\n    this.selectedCoordinates = {\n      x,\n      y\n    };\n  }\n  onImageClick(event) {\n    if (this.selectedCoordinates) {\n      console.log('Selected Coordinates:', this.selectedCoordinates);\n      // Include logic to send the selectedCoordinates and image to the server\n    }\n  }\n\n  onSubmit() {\n    if (this.imageSelected) {\n      const formData = new FormData();\n      formData.append('image', this.imageSelected);\n      // Include the selected coordinates in the formData\n      if (this.selectedCoordinates) {\n        formData.append('x', this.selectedCoordinates.x.toString());\n        formData.append('y', this.selectedCoordinates.y.toString());\n      }\n      this.http.post('http://localhost:5000/upload', formData).subscribe(response => {\n        console.log('Image uploaded successfully', response);\n      }, error => {\n        console.error('Error uploading image', error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 7,\n    vars: 1,\n    consts: [[3, \"ngSubmit\"], [\"imageForm\", \"ngForm\"], [\"type\", \"file\", \"accept\", \"image/*\", 3, \"change\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"Let's gooo, routing is working!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"input\", 2);\n        i0.ɵɵlistener(\"change\", function HomeComponent_Template_input_change_4_listener($event) {\n          return ctx.onFileSelected($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵtext(6, \"Upload Image\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !ctx.imageSelected);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm],\n    styles: [\".button[_ngcontent-%COMP%]{\\n  \\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyIuYnV0dG9ue1xyXG4gIFxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { HomeComponent };","map":{"version":3,"names":["Emitters","HomeComponent","ngOnInit","http","get","withCredentials","subscribe","res","message","name","authEmitter","emit","err","constructor","imagePreview","selectedCoordinates","imageSelected","onFileSelected","event","target","files","previewImage","reader","FileReader","onload","result","readAsDataURL","onImageMouseMove","imgElement","rect","getBoundingClientRect","x","Math","round","clientX","left","width","y","clientY","top","height","onImageClick","console","log","onSubmit","formData","FormData","append","toString","post","response","error","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","HomeComponent_Template_form_ngSubmit_2_listener","HomeComponent_Template_input_change_4_listener","$event","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\nraje\\Desktop\\VScode\\shapeScanner\\frontend\\jwt\\src\\app\\home\\home.component.ts","C:\\Users\\nraje\\Desktop\\VScode\\shapeScanner\\frontend\\jwt\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Emitters } from '../emitters/emitter';\n\ninterface Coordinates {\n  x: number;\n  y: number;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  message = '';\n\n  imagePreview: string | ArrayBuffer | null = null;\n  selectedCoordinates: Coordinates | null = null;\n\n  ngOnInit(): void {\n    this.http\n      .get('http://localhost:8000/api/user', { withCredentials: true })\n      .subscribe(\n        (res: any) => {\n          this.message = `Hi ${res.name}`;\n          Emitters.authEmitter.emit(true);\n        },\n        (err) => {\n          this.message = 'You are not logged in';\n          Emitters.authEmitter.emit(false);\n        }\n      );\n  }\n\n  imageSelected: File | null = null;\n\n  constructor(private http: HttpClient) { }\n\n  onFileSelected(event: any): void {\n    this.imageSelected = event.target.files[0] as File;\n    this.previewImage();\n\n  }\n\n  previewImage(): void {\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result;\n    };\n    reader.readAsDataURL(this.imageSelected as Blob);\n  }\n\n  onImageMouseMove(event: MouseEvent): void {\n    // Calculate the coordinates based on the image dimensions\n    const imgElement = event.target as HTMLImageElement;\n    const rect = imgElement.getBoundingClientRect();\n    const x = Math.round((event.clientX - rect.left) / rect.width * 720);\n    const y = Math.round((event.clientY - rect.top) / rect.height * 720);\n\n    this.selectedCoordinates = { x, y };\n  }\n\n  onImageClick(event: MouseEvent): void {\n    if (this.selectedCoordinates) {\n      console.log('Selected Coordinates:', this.selectedCoordinates);\n      // Include logic to send the selectedCoordinates and image to the server\n    }\n  }\n\n  onSubmit(): void {\n    if (this.imageSelected) {\n      const formData = new FormData();\n      formData.append('image', this.imageSelected);\n\n       // Include the selected coordinates in the formData\n       if (this.selectedCoordinates) {\n        formData.append('x', this.selectedCoordinates.x.toString());\n        formData.append('y', this.selectedCoordinates.y.toString());\n      }\n\n      this.http.post<any>('http://localhost:5000/upload', formData)\n        .subscribe(response => {\n          console.log('Image uploaded successfully', response);\n        }, error => {\n          console.error('Error uploading image', error);\n        });\n    }\n  }\n\n\n}\n","<p>Let's gooo, routing is working!</p>\n\n<!-- <button>Image Upload</button> -->\n\n<form (ngSubmit)=\"onSubmit()\" #imageForm=\"ngForm\">\n  <input type=\"file\" (change)=\"onFileSelected($event)\" accept=\"image/*\" />\n  <button type=\"submit\" [disabled]=\"!imageSelected\">Upload Image</button>\n</form>\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}